[{"/home/sally/codefellows/projects/tests/merged-app/src/index.js":"1","/home/sally/codefellows/projects/tests/merged-app/src/components/reducer.js":"2","/home/sally/codefellows/projects/tests/merged-app/src/components/StateProvider.js":"3","/home/sally/codefellows/projects/tests/merged-app/src/components/App.js":"4","/home/sally/codefellows/projects/tests/merged-app/src/components/Contacts.js":"5","/home/sally/codefellows/projects/tests/merged-app/src/components/Sidebar.js":"6","/home/sally/codefellows/projects/tests/merged-app/src/components/Login.js":"7","/home/sally/codefellows/projects/tests/merged-app/src/components/Account.js":"8","/home/sally/codefellows/projects/tests/merged-app/src/components/Dashboard/dashboard.js":"9","/home/sally/codefellows/projects/tests/merged-app/src/components/Chat.js":"10","/home/sally/codefellows/projects/tests/merged-app/src/components/ContactsCard.js":"11","/home/sally/codefellows/projects/tests/merged-app/src/components/SidebarChat.js":"12","/home/sally/codefellows/projects/tests/merged-app/src/components/DirectMessages.js":"13","/home/sally/codefellows/projects/tests/merged-app/src/firebase.js":"14","/home/sally/codefellows/projects/tests/merged-app/src/components/Dashboard/styles.js":"15","/home/sally/codefellows/projects/tests/merged-app/src/components/ChatTextBox/chatTextBox.js":"16","/home/sally/codefellows/projects/tests/merged-app/src/components/ChatView/chatView.js":"17","/home/sally/codefellows/projects/tests/merged-app/src/components/NewChat/newChat.js":"18","/home/sally/codefellows/projects/tests/merged-app/src/components/ChatList/chatList.js":"19","/home/sally/codefellows/projects/tests/merged-app/src/components/ChatTextBox/styles.js":"20","/home/sally/codefellows/projects/tests/merged-app/src/components/ChatView/styles.js":"21","/home/sally/codefellows/projects/tests/merged-app/src/components/ChatList/styles.js":"22","/home/sally/codefellows/projects/tests/merged-app/src/components/NewChat/styles.js":"23"},{"size":542,"mtime":1612423678712,"results":"24","hashOfConfig":"25"},{"size":428,"mtime":1612423678712,"results":"26","hashOfConfig":"25"},{"size":386,"mtime":1612423678712,"results":"27","hashOfConfig":"25"},{"size":2457,"mtime":1612528336262,"results":"28","hashOfConfig":"25"},{"size":1875,"mtime":1612565202960,"results":"29","hashOfConfig":"25"},{"size":3086,"mtime":1612565909220,"results":"30","hashOfConfig":"25"},{"size":3547,"mtime":1612565202960,"results":"31","hashOfConfig":"25"},{"size":4758,"mtime":1612566185440,"results":"32","hashOfConfig":"25"},{"size":6045,"mtime":1612565202960,"results":"33","hashOfConfig":"25"},{"size":4324,"mtime":1612565202960,"results":"34","hashOfConfig":"25"},{"size":1169,"mtime":1612565202960,"results":"35","hashOfConfig":"25"},{"size":3550,"mtime":1612565909960,"results":"36","hashOfConfig":"25"},{"size":1096,"mtime":1612423678712,"results":"37","hashOfConfig":"25"},{"size":1547,"mtime":1612565202970,"results":"38","hashOfConfig":"25"},{"size":330,"mtime":1612477094450,"results":"39","hashOfConfig":"25"},{"size":1341,"mtime":1612423678712,"results":"40","hashOfConfig":"25"},{"size":1909,"mtime":1612477094450,"results":"41","hashOfConfig":"25"},{"size":4135,"mtime":1612565202970,"results":"42","hashOfConfig":"25"},{"size":6014,"mtime":1612565202960,"results":"43","hashOfConfig":"25"},{"size":496,"mtime":1612429746572,"results":"44","hashOfConfig":"25"},{"size":1508,"mtime":1612477094450,"results":"45","hashOfConfig":"25"},{"size":588,"mtime":1612565202960,"results":"46","hashOfConfig":"25"},{"size":1021,"mtime":1612565202970,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"ofkiov",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/home/sally/codefellows/projects/tests/merged-app/src/index.js",[],["105","106"],"/home/sally/codefellows/projects/tests/merged-app/src/components/reducer.js",[],"/home/sally/codefellows/projects/tests/merged-app/src/components/StateProvider.js",[],"/home/sally/codefellows/projects/tests/merged-app/src/components/App.js",["107"],"import React from 'react'\r\nimport { BrowserRouter as Router, Switch , Route} from 'react-router-dom'\r\n\r\nimport { useStateValue } from \"./StateProvider\"\r\n\r\nimport Account from \"./Account\"\r\nimport Chat from \"./Chat\"\r\nimport Contacts from \"./Contacts\"\r\nimport Login from './Login'\r\nimport DashboardComponent from './Dashboard/dashboard';\r\n\r\nimport Sidebar from \"./Sidebar\"\r\n// import PrivateChat from './PrivateChat'\r\n\r\nimport '../css/App.css'\r\n\r\nfunction App() {\r\n\r\n  // const slideR = () => {\r\n  //   var boxOne = document.getElementById('root')\r\n  //       boxOne.classList.add('horizTranslate');\r\n  //       var computedStyle = window.getComputedStyle(boxOne),\r\n  //       Left = computedStyle.getPropertyValue('left');\r\n  //       boxOne.style.left = Left;\r\n  //       boxOne.classList.remove('horizTranslate');    \r\n    \r\n  // };\r\n\r\n  const slideRight = () => {\r\n    document.getElementById('root').style.left = '-100%';\r\n    document.getElementById('root').style.animation = 'slide-in 1s';\r\n  };\r\n\r\n  const slideLeft = () => {\r\n    document.getElementById('root').style.left = '0';\r\n    document.getElementById('root').style.animation = 'slide-in 1s';\r\n  };\r\n\r\n  const [{user}, dispatch ] = useStateValue();\r\n\r\n  return(\r\n   <div className='app'>\r\n    { !user ? (\r\n      <>\r\n      <Login />\r\n      </>\r\n      ):(\r\n        <div className='app__body'>\r\n          <div className=\"arrow\" onClick={slideRight}>\r\n            <div className=\"arrow-top\"></div>\r\n            <div className=\"arrow-bottom\"></div>\r\n          </div>\r\n          <div className=\"arrow\" id='leftarr' style={{transform:'rotateY(180deg)'}} onClick={slideLeft}>\r\n            <div className=\"arrow-top\"></div>\r\n            <div className=\"arrow-bottom\"></div>\r\n          </div>\r\n        <DashboardComponent />\r\n        <Router>\r\n          <Sidebar />\r\n          <Switch>\r\n            <Route path='/rooms/:roomId'>\r\n              <Chat />\r\n            </Route>\r\n            <Route path='/dm/:dmId'>\r\n              {/* <PrivateChat /> */}\r\n            </Route>\r\n            <Route path='/account/:accountId'>\r\n              <Account />\r\n            </Route> \r\n            <Route path='/contacts'>\r\n              <Contacts />\r\n            </Route>            \r\n            <Route path='/'>\r\n              {/* <Chat /> */}\r\n              <Account />\r\n            </Route>          \r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n\r\n      )}\r\n    </div>\r\n  ) \r\n}\r\n\r\nexport default App;\r\n","/home/sally/codefellows/projects/tests/merged-app/src/components/Contacts.js",["108","109","110","111"],"import React, { useState, useEffect } from \"react\";\r\nimport '../css/Contacts.css'\r\nimport { useStateValue } from \"../components/StateProvider\";\r\nimport ContactsCard from '../components/ContactsCard'\r\nimport db from '../firebase'\r\nimport { Link } from 'react-router-dom'\r\nimport { Search } from \"@material-ui/icons\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default function Contacts() {\r\n    const [{ user }, dispatch] = useStateValue();\r\n    const [users, setUsers] = useState([]);\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('users').doc(user.email).collection('friends').onSnapshot(snapshot => (\r\n            setUsers(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })\r\n            ))\r\n        ));\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, []);\r\n\r\n\r\n    console.log(users);\r\n    return (\r\n        <div className='contacts'>\r\n            <div className='contacts__header'>\r\n                <h1>Contacts</h1>\r\n            </div>\r\n            <div className='contacts__search'>\r\n                <form>\r\n                    <input value={searchValue} onChange={(e) => setSearchValue(e.target.value)} type='text' placeholder='Type an email' />\r\n                    <button type='submit' onSubmit={(e) => e.preventDefault()} onClick={(e) => e.preventDefault()} > <Link id='search-link' to={`/account/${searchValue}`}><Search /></Link></button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className='contacts__cards'>\r\n                {/* <ContactsCard addNewContact/> */}\r\n                {users && users.map(id => (\r\n                    <ContactsCard id={id.id} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/home/sally/codefellows/projects/tests/merged-app/src/components/Sidebar.js",["112","113","114","115","116","117","118","119","120"],"/home/sally/codefellows/projects/tests/merged-app/src/components/Login.js",["121","122","123"],"import React , {useEffect} from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport { auth , provider} from \"../firebase\";\r\n\r\nimport '../css/Login.css';\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from \"./StateProvider\"\r\n\r\nimport db from '../firebase'\r\nimport firebase from 'firebase'\r\nvar firebaseui = require('firebaseui');\r\nconst ui = new firebaseui.auth.AuthUI(firebase.auth());\r\n\r\nexport default function Login(){\r\n    const createUser = (uid,email, displayName, photoURL) => {\r\n        db.collection('users').doc(email).set({\r\n            uid: uid,\r\n            email: email,\r\n            displayName: displayName,\r\n            photoURL: `https://avatars.dicebear.com/api/gridy/${avataImage(email)}.svg?background=%23ebf1ff`,\r\n            friends: [],\r\n            messages: [],\r\n        }).then(() => {\r\n            console.log(\"Document successfully written!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n    };\r\n\r\n    const [{} , dispatch ]  = useStateValue();\r\n\r\n    var uiConfig = {\r\n        callbacks: {\r\n            signInSuccessWithAuthResult: function(authResult, redirectUrl) {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: authResult.user,\r\n                });\r\n                // if (!db.collection('users').doc(authResult.user.uid)){\r\n                    createUser(authResult.user.uid,authResult.user.email, authResult.user.displayName, authResult.user.photoURL)\r\n                // };\r\n                return true;\r\n            },\r\n            uiShown: function() {\r\n                document.getElementById('loader').style.display = 'none';\r\n            }\r\n        },\r\n        // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\r\n        signInFlow: 'popup',\r\n        // signInSuccessUrl: '/account',\r\n        signInOptions: [\r\n            firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n        ],\r\n        // Terms of service url.\r\n        // tosUrl: '<your-tos-url>',\r\n        // Privacy policy url.\r\n        // privacyPolicyUrl: '<your-privacy-policy-url>'\r\n    };\r\n    \r\n    ui.start('#firebaseui-auth-container', uiConfig);\r\n\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) =>{\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                });\r\n                // if (db.collection('users').doc(result.user.email) == null || db.collection('users').doc(result.user.email) == undefined){\r\n                createUser(result.user.email,result.user.email, result.user.displayName, result.user.photoURL)\r\n                // }\r\n\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    };\r\n    return(\r\n        <div className='login'>\r\n            <div className='login__container'>\r\n                <div className='login__text'>\r\n                    <h1>Sign into ChatiZone</h1>\r\n                </div>\r\n                <div id=\"firebaseui-auth-container\"></div>\r\n                <div id=\"loader\">Loading...</div>\r\n                <p>Or login with</p>\r\n\r\n                <div onClick={signIn} id=\"googleLog\">\r\n                    <img src=\"icon-google.png\" alt=\"GOOGLE\" />\r\n                </div>\r\n\t\t\t\t\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction avataImage(params) {\r\n    var sequence = params\r\n    var matches = sequence.match(/[A-z]/g);\r\n    return(matches.join(''));\r\n}\r\n","/home/sally/codefellows/projects/tests/merged-app/src/components/Account.js",["124","125","126","127"],"/home/sally/codefellows/projects/tests/merged-app/src/components/Dashboard/dashboard.js",["128"],"import React from 'react';\r\nimport NewChatComponent from '../NewChat/newChat';\r\nimport ChatListComponent from '../ChatList/chatList';\r\nimport ChatViewComponent from '../ChatView/chatView';\r\nimport ChatTextBoxComponent from '../ChatTextBox/chatTextBox';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core';\r\nimport { firebase } from '@firebase/app';\r\n\r\n// I need to investigate why sometimes\r\n// two messages will send instead of just\r\n// one. I dont know if there are two instances\r\n// of the chat box component or what...\r\n\r\n// I will be using both .then and async/await\r\n// in this tutorial to give a feel of both.\r\n\r\nclass DashboardComponent extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selectedChat: null,\r\n      newChatFormVisible: true,\r\n      email: null,\r\n      friends: [],\r\n      chats: []\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes } = this.props;\r\n\r\n    if(this.state.email) {\r\n      return(\r\n        <div className='dashboard-container' id='dashboard-container' style={{ display: 'flex',\r\n        backgroundcolor: 'blue',\r\n        backgroundColor: '#1a1d21',\r\n        position: 'absolute',\r\n        // overflow: 'hidden !important',\r\n        left: '120%',\r\n        top: '5%',\r\n        color: 'whitesmoke',\r\n        marginRight: '40%',\r\n        minHeight: '450px',\r\n        minWidth: '700px',\r\n        height: '90vh',\r\n        width: '60%',\r\n        overflow: \"auto\",\r\n        boxShadow: '-1px 4px 20px -6px black' }}>\r\n          <ChatListComponent history={this.props.history} \r\n            userEmail={this.state.email} \r\n            selectChatFn={this.selectChat} \r\n            chats={this.state.chats} \r\n            selectedChatIndex={this.state.selectedChat}\r\n            newChatBtnFn={this.newChatBtnClicked}>\r\n          </ChatListComponent>\r\n          {\r\n            this.state.newChatFormVisible ? null : <ChatViewComponent \r\n              user={this.state.email} \r\n              chat={this.state.chats[this.state.selectedChat]}>\r\n            </ChatViewComponent>\r\n          }\r\n          { \r\n            this.state.selectedChat !== null && !this.state.newChatFormVisible ? <ChatTextBoxComponent userClickedInputFn={this.messageRead} submitMessageFn={this.submitMessage}></ChatTextBoxComponent> : null \r\n          }\r\n          {\r\n            this.state.newChatFormVisible ? <NewChatComponent goToChatFn={this.goToChat} newChatSubmitFn={this.newChatSubmit}></NewChatComponent> : null\r\n          }\r\n          <div variant='contained' color='primary' className={classes.signOutBtn}></div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(<div></div>);\r\n    }\r\n  }\r\n\r\n  signOut = () => {\r\n    firebase.auth().signOut();\r\n    window.location.reload(false);\r\n  }\r\n\r\n  submitMessage = (msg) => {\r\n    const docKey = this.buildDocKey(this.state.chats[this.state.selectedChat]\r\n      .users\r\n      .filter(_usr => _usr !== this.state.email)[0])\r\n    firebase\r\n      .firestore()\r\n      .collection('chats')\r\n      .doc(docKey)\r\n      .update({\r\n        messages: firebase.firestore.FieldValue.arrayUnion({\r\n          sender: this.state.email,\r\n          message: msg,\r\n          timestamp: Date.now()\r\n        }),\r\n        receiverHasRead: false\r\n      });\r\n  }\r\n\r\n  // Always in alphabetical order:\r\n  // 'user1:user2'\r\n  buildDocKey = (friend) => [this.state.email, friend].sort().join(':');\r\n\r\n  newChatBtnClicked = () => this.setState({ newChatFormVisible: true, selectedChat: null });\r\n\r\n  newChatSubmit = async (chatObj) => {\r\n    const docKey = this.buildDocKey(chatObj.sendTo);\r\n    await \r\n      firebase\r\n        .firestore()\r\n        .collection('chats')\r\n        .doc(docKey)\r\n        .set({\r\n          messages: [{\r\n            message: chatObj.message,\r\n            sender: this.state.email\r\n          }],\r\n          users: [this.state.email, chatObj.sendTo],\r\n          receiverHasRead: false\r\n        })\r\n    this.setState({ newChatFormVisible: false });\r\n    this.selectChat(this.state.chats.length - 1);\r\n  }\r\n\r\n  selectChat = async (chatIndex) => {\r\n    await this.setState({ selectedChat: chatIndex, newChatFormVisible: false });\r\n    this.messageRead();\r\n  }\r\n\r\n  goToChat = async (docKey, msg) => {\r\n    const usersInChat = docKey.split(':');\r\n    const chat = this.state.chats.find(_chat => usersInChat.every(_user => _chat.users.includes(_user)));\r\n    this.setState({ newChatFormVisible: false });\r\n    await this.selectChat(this.state.chats.indexOf(chat));\r\n    this.submitMessage(msg);\r\n  }\r\n\r\n  // Chat index could be different than the one we are currently on in the case\r\n  // that we are calling this function from within a loop such as the chatList.\r\n  // So we will set a default value and can overwrite it when necessary.\r\n  messageRead = () => {\r\n    const chatIndex = this.state.selectedChat;\r\n    const docKey = this.buildDocKey(this.state.chats[chatIndex].users.filter(_usr => _usr !== this.state.email)[0]);\r\n    if(this.clickedMessageWhereNotSender(chatIndex)) {\r\n      firebase\r\n        .firestore()\r\n        .collection('chats')\r\n        .doc(docKey)\r\n        .update({ receiverHasRead: true });\r\n    } else {\r\n      console.log('Clicked message where the user was the sender');\r\n    }\r\n  }\r\n\r\n  clickedMessageWhereNotSender = (chatIndex) => this.state.chats[chatIndex].messages[this.state.chats[chatIndex].messages.length - 1].sender !== this.state.email;\r\n\r\n  componentWillMount = () => {\r\n      firebase.auth().onAuthStateChanged(async _usr => {\r\n        if(!_usr)\r\n          var i =1+1;\r\n        else {\r\n          await firebase\r\n            .firestore()\r\n            .collection('chats')\r\n            .where('users', 'array-contains', _usr.email)\r\n            .onSnapshot(async res => {\r\n              const chats = res.docs.map(_doc => _doc.data());\r\n              await this.setState({\r\n                email: _usr.email,\r\n                chats: chats,\r\n                friends: []\r\n              });\r\n            })\r\n        }\r\n    });\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(DashboardComponent);","/home/sally/codefellows/projects/tests/merged-app/src/components/Chat.js",["129","130","131"],"import React, {useState , useEffect, useRef} from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { Avatar , IconButton } from \"@material-ui/core\";\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport db , {firebaseApp} from '../firebase'\r\nimport firebase from 'firebase'\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport '../css/Chat.css'\r\nimport { useStateValue } from \"../components/StateProvider\";\r\n\r\n\r\nexport default function Chat(){\r\n    const dummy = useRef();\r\n    const { roomId } = useParams();\r\n    const [ room , setRoom ] = useState(\"\");\r\n    const [{user}, dispatch ] = useStateValue();\r\n    const messagesRef = db.collection('rooms').doc(roomId).collection('messages');\r\n    const query = messagesRef.orderBy('createdAt').limit(25);\r\n    const [messages] = useCollectionData(query, { idField: 'id' });\r\n    const [formValue, setFormValue] = useState('');\r\n  \r\n\r\n\r\n    useEffect(() =>{\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId).onSnapshot((snapshot) =>\r\n                setRoom(snapshot.data()));\r\n        }\r\n    } , [roomId])\r\n    \r\n  \r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const { email, displayName } = user;\r\n  \r\n        messagesRef.add({\r\n            text: formValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            email,\r\n            displayName\r\n        })\r\n  \r\n        setFormValue('');\r\n        dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n\r\n    // const attach = async (e) => {\r\n    //     e.preventDefault();\r\n    //     const file = e.target.files[0];\r\n    //     const storageRef = firebaseApp.ref()\r\n    //     const fileRef = storageRef.child(file.name)\r\n    //     fileRef.put(file)\r\n    //     const { email, displayName } = user;\r\n  \r\n    //     await messagesRef.add({\r\n    //         text: formValue,\r\n    //         createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n    //         email,\r\n    //         displayName\r\n    //     })\r\n  \r\n    //     setFormValue('');\r\n    //     dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n    // }\r\n\r\n\r\n    return(\r\n        <div className='chat'>\r\n            <div className='chat__header'>\r\n                <Avatar src={room.imageURL} />\r\n                <div className='chat__headerInfo'>\r\n                    <h3>{room.name}</h3>\r\n                </div>\r\n                <div className='chat__headerRight'>\r\n                    <IconButton>\r\n                        <AttachFileIcon />\r\n                    </IconButton>  \r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton> \r\n                </div>\r\n            </div>\r\n            <div className='chat__body'>\r\n                {messages && messages.map(msg =><ChatMessage key={msg.id} message={msg} />)}\r\n                <span ref={dummy}></span>\r\n            </div>   \r\n            <div className='chat__footer'>\r\n                <form>\r\n                    <input value={formValue} onChange={(e)=>setFormValue(e.target.value)} type='text' placeholder='Type a message' />\r\n                    <button type='submit' onClick={sendMessage}><SendIcon /></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction avataImage(params) {\r\n    var sequence = params\r\n    var matches = sequence.match(/[A-z]/g);\r\n    return(matches.join(''));\r\n}\r\n  \r\n  \r\nfunction ChatMessage(props) {\r\n    const { text, email, displayName } = props.message;\r\n    const [{user}, dispatch ] = useStateValue();\r\n\r\n    const messageClass = email === user.email ? 'chat__receiver' : 'false';\r\n    console.log(props.message)\r\n    return (<>\r\n\r\n        <div className={`chat__message ${messageClass}`}>\r\n            <span className='chat__name'>\r\n                < Link to={`/account/${email}`}>\r\n                    <Avatar src={`https://avatars.dicebear.com/api/gridy/${avataImage(email)}.svg?background=%23ebf1ff`}/>\r\n                    <p className=\"displayNames\">{displayName}</p>\r\n                </Link> \r\n            </span>\r\n            {text}\r\n        </div>\r\n    </>)\r\n}\r\n  \r\n","/home/sally/codefellows/projects/tests/merged-app/src/components/ContactsCard.js",["132"],"import React, {useState,useEffect} from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { Link } from 'react-router-dom'\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport db from '../firebase'\r\nimport '../css/Contacts.css'\r\n\r\nexport default function ContactsCard({id, name, addNewContact}) {\r\n\r\n    const [ userDetails , setUserDetails ] = useState([]);\r\n    useEffect( () => {\r\n        const unsubscribe = db.collection('users').doc(id).onSnapshot(snapshot =>(setUserDetails(snapshot.data())));\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    },[]);\r\n\r\n    const findFriend = () => {\r\n\r\n    };\r\n\r\n    return !addNewContact ? (\r\n        <div  className='contactCard'> \r\n            < Link to={`/account/${userDetails.email}`}>\r\n                <Avatar src={userDetails.photoURL}/>\r\n                <div className='contactCard__info'>\r\n                    <h2>{userDetails.displayName}</h2>\r\n                </div>\r\n            </Link> \r\n        </div>\r\n    ) : (\r\n       <div onClick={findFriend} className='contactCard'>\r\n           <h2 className='find'><PersonAddIcon /> Find Friends</h2>  \r\n       </div> \r\n    )\r\n}","/home/sally/codefellows/projects/tests/merged-app/src/components/SidebarChat.js",["133"],"/home/sally/codefellows/projects/tests/merged-app/src/components/DirectMessages.js",["134","135"],"import React, {useState,useEffect} from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { Link } from 'react-router-dom'\r\nimport db from '../firebase'\r\nimport '../css/DirectMessages.css'\r\nimport { useStateValue } from \"../components/StateProvider\";\r\n\r\nexport default function DirectMessages({id, name, addNewChat}) {\r\n    const [{user}, dispatch ] = useStateValue();\r\n    const [ users , setUsers ] = useState([]);\r\n\r\n    useEffect( () => {\r\n        const unsubscribe = db.collection('dm').onSnapshot(snapshot =>(\r\n            setUsers(snapshot.docs.map(doc =>({\r\n                id: doc.id,\r\n                data : doc.data()\r\n            })\r\n            ))\r\n        ));\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    },[users]);\r\n    return(\r\n        < Link to={`/dm/${id}`}>\r\n            <div  className='directMessages'> \r\n                <Avatar />\r\n                <div className='directMessages__info'>\r\n                    <h2>{name}</h2>\r\n                    <p>DIRECT MESSAGES</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}","/home/sally/codefellows/projects/tests/merged-app/src/firebase.js",["136"],"// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase'\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyC18yxvskPTNpcN-Tz4nFikJ5i9QtPuta4\",\r\n//   authDomain: \"backup2-49c2f.firebaseapp.com\",\r\n//   projectId: \"backup2-49c2f\",\r\n//   storageBucket: \"backup2-49c2f.appspot.com\",\r\n//   messagingSenderId: \"655035542798\",\r\n//   appId: \"1:655035542798:web:7297998ae93e40e9673b5f\",\r\n//   measurementId: \"G-ZY8F6NCSPN\"\r\n\r\n// };\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyC8bk8X1gP-IK1GUqzTfQBDboSrXW2ElBs\",\r\n//   authDomain: \"test-clone-8f056.firebaseapp.com\",\r\n//   databaseURL: \"https://test-clone-8f056-default-rtdb.firebaseio.com\",\r\n//   projectId: \"test-clone-8f056\",\r\n//   storageBucket: \"test-clone-8f056.appspot.com\",\r\n//   messagingSenderId: \"369779514054\",\r\n//   appId: \"1:369779514054:web:fa9bbc1459d27b97d3d5c7\",\r\n//   measurementId: \"G-E1Y58N9E59\"\r\n// };\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC18yxvskPTNpcN-Tz4nFikJ5i9QtPuta4\",\r\n  authDomain: \"backup2-49c2f.firebaseapp.com\",\r\n  projectId: \"backup2-49c2f\",\r\n  storageBucket: \"backup2-49c2f.appspot.com\",\r\n  messagingSenderId: \"655035542798\",\r\n  appId: \"1:655035542798:web:7297998ae93e40e9673b5f\",\r\n  measurementId: \"G-ZY8F6NCSPN\"\r\n};\r\n\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nconst storage = firebase.storage()\r\n\r\nexport { auth , provider , firebaseApp};\r\nexport default db;\r\n","/home/sally/codefellows/projects/tests/merged-app/src/components/Dashboard/styles.js",[],"/home/sally/codefellows/projects/tests/merged-app/src/components/ChatTextBox/chatTextBox.js",[],"/home/sally/codefellows/projects/tests/merged-app/src/components/ChatView/chatView.js",[],"/home/sally/codefellows/projects/tests/merged-app/src/components/NewChat/newChat.js",[],"/home/sally/codefellows/projects/tests/merged-app/src/components/ChatList/chatList.js",["137"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport NotificationImportant from '@material-ui/icons/NotificationImportant';\r\nimport { firebase } from '@firebase/app';\r\n\r\nclass ChatListComponent extends React.Component {\r\n  signOut() {\r\n    // firebase.auth().signOut();\r\n    window.location.reload(false);\r\n  }\r\n\r\n  render() {\r\n    // var i;\r\n    const { classes } = this.props;\r\n\r\n    if (this.props.chats.length > 0) {\r\n      return (\r\n        <div className={classes.root}>\r\n\r\n          <div className='sidebar__header'>\r\n            <div className='sidebar__headerRight' style={{ width: '100%', height: '100%', fontSize: 'large !important', display: 'flex', justifyContent: 'space-evenly' }}>\r\n              <IconButton >\r\n                <AddCircleIcon onClick={this.newChat} id='potato' />\r\n              </IconButton>\r\n              <IconButton >\r\n                <ExitToAppIcon onClick={this.signOut} />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n\r\n          <div variant=\"contained\"\r\n            fullWidth\r\n            color='primary'\r\n            style={{ height: '8px', backgroundColor: '#3f51b5' }}>\r\n          </div>\r\n          <List>\r\n            {\r\n              this.props.chats.map((_chat, _index) => {\r\n                return (\r\n                  <div key={_index}>\r\n                    <ListItem onClick={() => this.selectChat(_index)}\r\n                      className={classes.listItem}\r\n                      selected={this.props.selectedChatIndex === _index}\r\n                      alignItems=\"flex-start\">\r\n                      <Typography style={{ display: 'none' }}>\r\n                        {i = _chat.users.filter(_user => _user !== this.props.userEmail)[0]}\r\n                      </Typography>\r\n                      <ListItemAvatar>\r\n                        {userImage(i)}\r\n                        <Avatar id={`image-${i}`} src={`https://avatars.dicebear.com/api/gridy/${avataImage(_chat.users.filter(_user => _user !== this.props.userEmail)[0])}.svg?background=%23ebf1ff`} alt={`${i}`}/>\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={\r\n                          <React.Fragment>\r\n                            <Typography component='span'\r\n                              color='#d1d2d3' id={`blabla${i}`}>\r\n                              {userFromEmail(i)}\r\n                            </Typography>\r\n                          </React.Fragment>\r\n\r\n                        }\r\n\r\n                        secondary={\r\n                          <React.Fragment>\r\n                            <Typography component='span'\r\n                              color='#d1d2d3'>\r\n                              {_chat.messages[_chat.messages.length - 1].message.substring(0, 30) + ' ...'}\r\n                            </Typography>\r\n                          </React.Fragment>\r\n                        } />\r\n                      {\r\n                        _chat.receiverHasRead === false && !this.userIsSender(_chat) ?\r\n                          <ListItemIcon><NotificationImportant className={classes.unreadMessage}></NotificationImportant></ListItemIcon> :\r\n                          null\r\n                      }\r\n                    </ListItem>\r\n                    <Divider />\r\n                  </div>\r\n                )\r\n              })\r\n            }\r\n          </List>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className={classes.root}>\r\n          <div className='sidebar__header'>\r\n            <div className='sidebar__headerRight' style={{ width: '100%', height: '100%', fontSize: 'large !important', display: 'flex', justifyContent: 'space-evenly' }}>\r\n              <IconButton >\r\n                <AddCircleIcon onClick={this.newChat} id='potato' />\r\n              </IconButton>\r\n              <IconButton >\r\n                <ExitToAppIcon onClick={this.signOut} />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div variant=\"contained\"\r\n            fullWidth\r\n            color='primary'\r\n            style={{ height: '8px', backgroundColor: '#3f51b5' }}>\r\n          </div>\r\n          <List></List>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  userIsSender = (chat) => chat.messages[chat.messages.length - 1].sender === this.props.userEmail;\r\n  newChat = () => this.props.newChatBtnFn();\r\n  selectChat = (index) => this.props.selectChatFn(index);\r\n\r\n}\r\nvar i;\r\n\r\nfunction avataImage(params) {\r\n  var sequence = params\r\n  var matches = sequence.match(/[A-z]/g);\r\n  return(matches.join(''));\r\n}\r\n\r\nfunction userFromEmail(em) {\r\n  firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .doc(em)\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        document.getElementById(`blabla${em}`).innerText = doc.data().displayName;\r\n\r\n      } else {\r\n        // doc.data() will be undefined in this case\r\n        document.getElementById(`blabla${em}`).innerText = 'anonymous';\r\n      }\r\n    })\r\n}\r\n\r\n\r\nfunction userImage(em) {\r\n  firebase\r\n    .firestore()\r\n    .collection('users')\r\n    .doc(em)\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        // document.getElementById(`image-${em}`).alt = doc.data().photoURL;\r\n        return doc.data().photoURL;\r\n      }\r\n    })\r\n}\r\n\r\nexport default withStyles(styles)(ChatListComponent);\r\n\r\n","/home/sally/codefellows/projects/tests/merged-app/src/components/ChatTextBox/styles.js",[],"/home/sally/codefellows/projects/tests/merged-app/src/components/ChatView/styles.js",[],"/home/sally/codefellows/projects/tests/merged-app/src/components/ChatList/styles.js",["138"],"const styles = theme => ({\r\n    root: {\r\n      // backgroundColor: \"rgb(32 31 31)\",\r\n      backgroundColor: 'white',\r\n      height: 'calc(100% - 35px)',\r\n      position: 'absolute',\r\n      left: '0',\r\n      width: '300px',\r\n      boxShadow: '0px 0px 2px black',\r\n      backgroundColor: '#130f19',\r\n      color: '#d1d2d3',\r\n\r\n    },\r\n    listItem: {\r\n      cursor: 'pointer'\r\n    },\r\n    newChatBtn: {\r\n      borderRadius: '0px'\r\n    },\r\n    unreadMessage: {\r\n      color: 'red',\r\n      position: 'absolute',\r\n      top: '0',\r\n      right: '5px'\r\n    }\r\n  });\r\n  \r\n  export default styles;","/home/sally/codefellows/projects/tests/merged-app/src/components/NewChat/styles.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":39,"column":18,"nodeType":"145","messageId":"146","endLine":39,"endColumn":26},{"ruleId":"143","severity":1,"message":"147","line":8,"column":8,"nodeType":"145","messageId":"146","endLine":8,"endColumn":13},{"ruleId":"143","severity":1,"message":"148","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":12,"column":22,"nodeType":"145","messageId":"146","endLine":12,"endColumn":30},{"ruleId":"149","severity":1,"message":"150","line":27,"column":8,"nodeType":"151","endLine":27,"endColumn":10,"suggestions":"152"},{"ruleId":"143","severity":1,"message":"153","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":12},{"ruleId":"143","severity":1,"message":"154","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":11},{"ruleId":"143","severity":1,"message":"155","line":5,"column":27,"nodeType":"145","messageId":"146","endLine":5,"endColumn":33},{"ruleId":"143","severity":1,"message":"156","line":5,"column":35,"nodeType":"145","messageId":"146","endLine":5,"endColumn":41},{"ruleId":"143","severity":1,"message":"157","line":5,"column":43,"nodeType":"145","messageId":"146","endLine":5,"endColumn":48},{"ruleId":"143","severity":1,"message":"158","line":9,"column":8,"nodeType":"145","messageId":"146","endLine":9,"endColumn":17},{"ruleId":"143","severity":1,"message":"159","line":13,"column":8,"nodeType":"145","messageId":"146","endLine":13,"endColumn":22},{"ruleId":"143","severity":1,"message":"160","line":16,"column":8,"nodeType":"145","messageId":"146","endLine":16,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":20,"column":22,"nodeType":"145","messageId":"146","endLine":20,"endColumn":30},{"ruleId":"143","severity":1,"message":"161","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"148","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":16},{"ruleId":"162","severity":1,"message":"163","line":30,"column":12,"nodeType":"164","messageId":"165","endLine":30,"endColumn":14},{"ruleId":"143","severity":1,"message":"144","line":15,"column":22,"nodeType":"145","messageId":"146","endLine":15,"endColumn":30},{"ruleId":"149","severity":1,"message":"166","line":55,"column":8,"nodeType":"151","endLine":55,"endColumn":10,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":85,"column":21,"nodeType":"170","endLine":85,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":112,"column":21,"nodeType":"170","endLine":112,"endColumn":25},{"ruleId":"143","severity":1,"message":"171","line":162,"column":15,"nodeType":"145","messageId":"146","endLine":162,"endColumn":16},{"ruleId":"143","severity":1,"message":"172","line":9,"column":14,"nodeType":"145","messageId":"146","endLine":9,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":20,"column":20,"nodeType":"145","messageId":"146","endLine":20,"endColumn":28},{"ruleId":"143","severity":1,"message":"144","line":110,"column":20,"nodeType":"145","messageId":"146","endLine":110,"endColumn":28},{"ruleId":"149","severity":1,"message":"173","line":16,"column":7,"nodeType":"151","endLine":16,"endColumn":9,"suggestions":"174"},{"ruleId":"143","severity":1,"message":"175","line":10,"column":10,"nodeType":"145","messageId":"146","endLine":10,"endColumn":16},{"ruleId":"143","severity":1,"message":"176","line":9,"column":13,"nodeType":"145","messageId":"146","endLine":9,"endColumn":17},{"ruleId":"143","severity":1,"message":"144","line":9,"column":20,"nodeType":"145","messageId":"146","endLine":9,"endColumn":28},{"ruleId":"143","severity":1,"message":"177","line":41,"column":7,"nodeType":"145","messageId":"146","endLine":41,"endColumn":14},{"ruleId":"143","severity":1,"message":"148","line":15,"column":8,"nodeType":"145","messageId":"146","endLine":15,"endColumn":14},{"ruleId":"178","severity":1,"message":"179","line":10,"column":7,"nodeType":"180","messageId":"165","endLine":10,"endColumn":22},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.","ArrayExpression",["183"],"'Tabs' is defined but never used.","'Tab' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'GroupIcon' is defined but never used.","'DirectMessages' is defined but never used.","'firebase' is defined but never used.","'useEffect' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'accountId'. Either include it or remove the dependency array.",["184"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'i' is assigned a value but never used.","'firebaseApp' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["185"],"'render' is defined but never used.","'user' is assigned a value but never used.","'storage' is assigned a value but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [user.email]",{"range":"192","text":"193"},"Update the dependencies array to be: [accountId]",{"range":"194","text":"195"},"Update the dependencies array to be: [id]",{"range":"196","text":"197"},[966,968],"[user.email]",[1935,1937],"[accountId]",[597,599],"[id]"]